<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- Définition des beans User -->
    <!-- Bean User Singleton -->
    <bean id="singletonUser" class="org.technova.model.User" scope="singleton">
        <property name="nom" value="Admin"/>
        <property name="prenom" value="System"/>
        <property name="pieceIdentite" value="ADMIN-ID"/>
        <property name="nationalite" value="Marocaine"/>
        <property name="dateInscription" value="#{T(java.time.LocalDateTime).now()}"/>
        <property name="dateExpiration" value="#{T(java.time.LocalDateTime).now().plusYears(1)}"/>
    </bean>

    <!-- Bean User en mode Prototype -->
    <bean id="prototypeUser" class="org.technova.model.User" scope="prototype"/>

    <!-- Repository -->
    <bean id="userRepository" class="org.technova.repository.UserRepository">
        <property name="entityManager" ref="entityManager"/>
    </bean>

    <!-- Service avec les trois types d'injection -->
    <!-- 1. Injection par constructeur -->
    <bean id="userServiceConstructor" class="org.technova.service.UserServiceImpl">
        <constructor-arg ref="userRepository"/>
    </bean>

    <!-- 2. Injection par setter -->
    <bean id="userServiceSetter" class="org.technova.service.UserServiceImpl">
        <property name="userRepository" ref="userRepository"/>
    </bean>

    <!-- 3. Les interfaces seront injectées via les implémentations -->
    <bean id="userService" class="org.technova.service.UserServiceImpl">
        <property name="repository" ref="userRepository"/>
    </bean>

    <!-- Configuration JPA -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="org.technova.model"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <!-- Configuration de la source de données -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/technova_db"/>
        <property name="username" value="postgres"/>
        <property name="password" value="your_password"/>
    </bean>

    <!-- Gestionnaire de transactions -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- Active la gestion des transactions -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>